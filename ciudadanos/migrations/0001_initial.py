# Generated by Django 4.2.16 on 2025-04-11 16:19

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("configuraciones", "0007_remove_departamento_fk_provincia_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="ActividadRealizada",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("actividad", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Actividad Realizada",
                "verbose_name_plural": "Actividades Realizadas",
            },
        ),
        migrations.CreateModel(
            name="Agua",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Agua",
                "verbose_name_plural": "Aguas",
            },
        ),
        migrations.CreateModel(
            name="Alerta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255, unique=True)),
                ("estado", models.BooleanField(default=True)),
                ("gravedad", models.CharField(max_length=500)),
            ],
            options={
                "verbose_name": "Alerta",
                "verbose_name_plural": "Alertas",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="AportesJubilacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("aporte", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Aporte Jubilación",
                "verbose_name_plural": "Aportes Jubilación",
            },
        ),
        migrations.CreateModel(
            name="AreaCurso",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("area", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Area Curso",
                "verbose_name_plural": "Areas Cursos",
            },
        ),
        migrations.CreateModel(
            name="AsisteEscuela",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("asiste", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Asiste Escuela",
                "verbose_name_plural": "Asiste Escuelas",
            },
        ),
        migrations.CreateModel(
            name="CantidadAmbientes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cantidad", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Cantidad de Ambientes",
                "verbose_name_plural": "Cantidades de Ambientes",
            },
        ),
        migrations.CreateModel(
            name="CategoriaAlerta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255, unique=True)),
                ("estado", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "CategoriaAlertas",
                "verbose_name_plural": "CategoriasAlertas",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="CentrosSalud",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("centro", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Centro de Salud",
                "verbose_name_plural": "Centros de Salud",
            },
        ),
        migrations.CreateModel(
            name="Circuito",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("circuito", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Circuito",
                "verbose_name_plural": "Circuitos",
            },
        ),
        migrations.CreateModel(
            name="Ciudadano",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("apellido", models.CharField(max_length=255)),
                ("nombre", models.CharField(max_length=255)),
                ("fecha_nacimiento", models.DateField()),
                (
                    "documento",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(3000000),
                            django.core.validators.MaxValueValidator(100000000),
                        ],
                    ),
                ),
                ("calle", models.CharField(blank=True, max_length=255, null=True)),
                ("altura", models.IntegerField(blank=True, null=True)),
                ("latitud", models.CharField(blank=True, max_length=255, null=True)),
                ("longitud", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "piso_departamento",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Piso/Dpto (optativo)",
                    ),
                ),
                (
                    "torre_pasillo",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Torre / Pasillo (optativo)",
                    ),
                ),
                (
                    "escalera_manzana",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Escalera / Manzana (optativo)",
                    ),
                ),
                (
                    "codigo_postal",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Código Postal"
                    ),
                ),
                ("telefono", models.IntegerField(blank=True, null=True)),
                (
                    "telefono_alternativo",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Telefono Alternativo"
                    ),
                ),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                (
                    "foto",
                    models.ImageField(blank=True, null=True, upload_to="ciudadanos"),
                ),
                (
                    "observaciones",
                    models.CharField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Observaciones (optativo)",
                    ),
                ),
                ("estado", models.BooleanField(default=True)),
                ("creado", models.DateField(auto_now_add=True)),
                ("modificado", models.DateField(auto_now=True)),
                ("alertas", models.ManyToManyField(blank=True, to="ciudadanos.alerta")),
                (
                    "circuito",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.circuito",
                    ),
                ),
                (
                    "creado_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="creado_por",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Ciudadano",
                "verbose_name_plural": "Ciudadano",
                "ordering": ["apellido"],
            },
        ),
        migrations.CreateModel(
            name="Condicion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("condicion", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Condición de",
                "verbose_name_plural": "Condiciones de",
            },
        ),
        migrations.CreateModel(
            name="Desague",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Desagüe",
                "verbose_name_plural": "Desagües",
            },
        ),
        migrations.CreateModel(
            name="Dimension",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dimension", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Dimensión",
                "verbose_name_plural": "Dimensiones",
            },
        ),
        migrations.CreateModel(
            name="Direccion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="DuracionTrabajo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("duracion", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Duración del Trabajo",
                "verbose_name_plural": "Duraciones del Trabajo",
            },
        ),
        migrations.CreateModel(
            name="EstadoCivil",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("estado", models.CharField(max_length=20)),
            ],
            options={
                "verbose_name": "Estado Civil",
                "verbose_name_plural": "Estados Civiles",
            },
        ),
        migrations.CreateModel(
            name="EstadoDerivacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("estado", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Estado de Derivación",
                "verbose_name_plural": "Estados de Derivación",
            },
        ),
        migrations.CreateModel(
            name="EstadoLlamado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "EstadoLlamado",
                "verbose_name_plural": "EstadosLlamados",
            },
        ),
        migrations.CreateModel(
            name="EstadoNivelEducativo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("estado", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Estado Nivel Educativo",
                "verbose_name_plural": "Estados Niveles Educativos",
            },
        ),
        migrations.CreateModel(
            name="EstadoRelacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("estado", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Estado de Relación",
                "verbose_name_plural": "Estados de Relación",
            },
        ),
        migrations.CreateModel(
            name="EstadosIntervencion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "EstadosIntervencion",
                "verbose_name_plural": "EstadosIntervenciones",
            },
        ),
        migrations.CreateModel(
            name="Frecuencia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("frecuencia", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Frecuencia",
                "verbose_name_plural": "Frecuencias",
            },
        ),
        migrations.CreateModel(
            name="Gas",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Gas",
                "verbose_name_plural": "Gases",
            },
        ),
        migrations.CreateModel(
            name="Grado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("grado", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Grado",
                "verbose_name_plural": "Grados",
            },
        ),
        migrations.CreateModel(
            name="Importancia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("importancia", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Importancia",
                "verbose_name_plural": "Importancias",
            },
        ),
        migrations.CreateModel(
            name="Inodoro",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Inodoro",
                "verbose_name_plural": "Inodoros",
            },
        ),
        migrations.CreateModel(
            name="InstitucionEducativas",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("institucion", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Institucion Educativa",
                "verbose_name_plural": "Instituciones Educativas",
            },
        ),
        migrations.CreateModel(
            name="Jurisdiccion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("jurisdiccion", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Jurisdicción",
                "verbose_name_plural": "Jurisdicciones",
            },
        ),
        migrations.CreateModel(
            name="ModoContratacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("modo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Modo de Contratación",
                "verbose_name_plural": "Modos de Contratación",
            },
        ),
        migrations.CreateModel(
            name="MotivoNivelIncompleto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("motivo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Motivo Nivel Incompleto",
                "verbose_name_plural": "Motivos Niveles Incompletos",
            },
        ),
        migrations.CreateModel(
            name="Nacionalidad",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nacionalidad", models.CharField(max_length=50)),
            ],
            options={
                "verbose_name": "Nacionalidad",
                "verbose_name_plural": "Nacionalidades",
            },
        ),
        migrations.CreateModel(
            name="NivelEducativo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nivel", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Nivel Educativo",
                "verbose_name_plural": "Niveles Educativos",
            },
        ),
        migrations.CreateModel(
            name="NobusquedaLaboral",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("motivo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Motivo de No Búsqueda Laboral",
                "verbose_name_plural": "Motivos de No Búsqueda Laboral",
            },
        ),
        migrations.CreateModel(
            name="ProgramasLlamados",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "ProgramasLlamados",
                "verbose_name_plural": "ProgramasLlamados",
            },
        ),
        migrations.CreateModel(
            name="Rechazo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("motivo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Motivo de Rechazo",
                "verbose_name_plural": "Motivos de Rechazo",
            },
        ),
        migrations.CreateModel(
            name="Secretarias",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255, unique=True)),
                (
                    "observaciones",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("estado", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Secretaría",
                "verbose_name_plural": "Secretarías",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="Sexo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sexo", models.CharField(max_length=10)),
            ],
            options={
                "verbose_name": "Sexo",
                "verbose_name_plural": "Sexos",
            },
        ),
        migrations.CreateModel(
            name="TiempoBusquedaLaboral",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tiempo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tiempo de Búsqueda Laboral",
                "verbose_name_plural": "Tiempos de Búsqueda Laboral",
            },
        ),
        migrations.CreateModel(
            name="TipoConstruccionVivienda",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tipo de Construcción de Vivienda",
                "verbose_name_plural": "Tipos de Construcción de Vivienda",
            },
        ),
        migrations.CreateModel(
            name="TipoDocumento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=20)),
            ],
            options={
                "verbose_name": "Tipo de Documento",
                "verbose_name_plural": "Tipos de Documentos",
            },
        ),
        migrations.CreateModel(
            name="TipoGestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("gestion", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tipo Gestion",
                "verbose_name_plural": "Tipos Gestion",
            },
        ),
        migrations.CreateModel(
            name="TipoIntervencion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "TipoIntervencion",
                "verbose_name_plural": "TiposIntervencion",
            },
        ),
        migrations.CreateModel(
            name="TipoOrganismo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tipo de Organismo",
                "verbose_name_plural": "Tipos de Organismos",
            },
        ),
        migrations.CreateModel(
            name="TipoPisosVivienda",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tipo de Pisos de Vivienda",
                "verbose_name_plural": "Tipos de Pisos de Vivienda",
            },
        ),
        migrations.CreateModel(
            name="TipoPosesionVivienda",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tipo de Posesión de Vivienda",
                "verbose_name_plural": "Tipos de Posesión de Vivienda",
            },
        ),
        migrations.CreateModel(
            name="TipoTechoVivienda",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tipo de Techo de Vivienda",
                "verbose_name_plural": "Tipos de Techo de Vivienda",
            },
        ),
        migrations.CreateModel(
            name="TipoVivienda",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tipo de Vivienda",
                "verbose_name_plural": "Tipos de Vivienda",
            },
        ),
        migrations.CreateModel(
            name="Turno",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("turno", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Turno",
                "verbose_name_plural": "Turnos",
            },
        ),
        migrations.CreateModel(
            name="UbicacionVivienda",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("contexto", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Contexto de Casa",
                "verbose_name_plural": "Contextos de Casa",
            },
        ),
        migrations.CreateModel(
            name="VinculoFamiliar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("vinculo", models.CharField(max_length=255)),
                ("inverso", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Vínculo Familiar",
                "verbose_name_plural": "Vínculos Familiares",
            },
        ),
        migrations.CreateModel(
            name="TipoLlamado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
                (
                    "programas_llamados",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.programasllamados",
                    ),
                ),
            ],
            options={
                "verbose_name": "TipoLlamado",
                "verbose_name_plural": "TiposLammado",
            },
        ),
        migrations.CreateModel(
            name="SubtipoLlamado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
                (
                    "tipo_llamado",
                    models.ForeignKey(
                        default=1,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.tipollamado",
                    ),
                ),
            ],
            options={
                "verbose_name": "subtipo_llamado",
                "verbose_name_plural": "SubTiposLlamado",
            },
        ),
        migrations.CreateModel(
            name="Subsecretarias",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255, unique=True)),
                (
                    "observaciones",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("estado", models.BooleanField(default=True)),
                (
                    "secretaria",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ciudadanos.secretarias",
                    ),
                ),
            ],
            options={
                "verbose_name": "Subsecretaría",
                "verbose_name_plural": "Subecretarías",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="SubIntervencion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
                (
                    "subintervencion",
                    models.ForeignKey(
                        default=1,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.tipointervencion",
                    ),
                ),
            ],
            options={
                "verbose_name": "SubIntervencion",
                "verbose_name_plural": "SubIntervenciones",
            },
        ),
        migrations.CreateModel(
            name="Programa",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255, unique=True)),
                ("estado", models.BooleanField(default=True)),
                (
                    "observaciones",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "subsecretaria",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ciudadanos.subsecretarias",
                    ),
                ),
            ],
            options={
                "verbose_name": "Programa",
                "verbose_name_plural": "Programas",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="PlanSocial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255, unique=True)),
                ("estado", models.BooleanField(default=True)),
                (
                    "observaciones",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "jurisdiccion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ciudadanos.jurisdiccion",
                    ),
                ),
            ],
            options={
                "verbose_name": "PlanSocial",
                "verbose_name_plural": "PlanesSociales",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="Organismo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255, unique=True)),
                ("calle", models.CharField(blank=True, max_length=255, null=True)),
                ("altura", models.IntegerField(blank=True, null=True)),
                ("piso", models.CharField(blank=True, max_length=255, null=True)),
                ("barrio", models.CharField(blank=True, max_length=255, null=True)),
                ("telefono", models.IntegerField(blank=True, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("estado", models.BooleanField(default=True)),
                (
                    "observaciones",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "localidad",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="configuraciones.localidad",
                    ),
                ),
                (
                    "tipo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ciudadanos.tipoorganismo",
                    ),
                ),
            ],
            options={
                "verbose_name": "Organismo",
                "verbose_name_plural": "Organismos",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="HistorialCiudadanoProgramas",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fecha", models.DateTimeField(auto_now_add=True)),
                (
                    "accion",
                    models.CharField(
                        choices=[("agregado", "Agregado"), ("eliminado", "Eliminado")],
                        max_length=10,
                    ),
                ),
                (
                    "ciudadano",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hist_ciudadano_programa",
                        to="ciudadanos.ciudadano",
                    ),
                ),
                (
                    "programa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hist_prog_ciudadano",
                        to="ciudadanos.programa",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Historial CiudadanoPrograma",
                "verbose_name_plural": "Historial CiudadanosProgramas",
                "ordering": ["-fecha"],
            },
        ),
        migrations.CreateModel(
            name="GrupoFamiliar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vinculo_inverso",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("conviven", models.BooleanField(blank=True, null=True)),
                ("cuidador_principal", models.BooleanField(blank=True, null=True)),
                (
                    "observaciones",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "ciudadano_1",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ciudadano1",
                        to="ciudadanos.ciudadano",
                    ),
                ),
                (
                    "ciudadano_2",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ciudadano2",
                        to="ciudadanos.ciudadano",
                    ),
                ),
                (
                    "estado_relacion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.estadorelacion",
                    ),
                ),
                (
                    "vinculo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.vinculofamiliar",
                    ),
                ),
            ],
            options={
                "verbose_name": "GrupoFamiliar",
                "verbose_name_plural": "CiudadanosGrupoFamiliar",
                "ordering": ["ciudadano_2"],
            },
        ),
        migrations.CreateModel(
            name="DimensionVivienda",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cant_convivientes",
                    models.SmallIntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        verbose_name="¿Cuántas personas viven en la vivienda?",
                    ),
                ),
                (
                    "cant_menores",
                    models.SmallIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="¿Cuántos de ellos son menores de 18 años?",
                    ),
                ),
                (
                    "cant_camas",
                    models.SmallIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="¿Cuántas camas/ colchones posee?",
                    ),
                ),
                (
                    "cant_hogares",
                    models.SmallIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="¿Cuantos hogares hay en la vivienda?",
                    ),
                ),
                (
                    "obs_vivienda",
                    models.CharField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Observaciones",
                    ),
                ),
                ("creado", models.DateField(auto_now_add=True)),
                ("modificado", models.DateField(auto_now=True)),
                (
                    "hay_desmoronamiento",
                    models.BooleanField(
                        default=False, verbose_name="Existe riesgo de desmoronamiento?"
                    ),
                ),
                (
                    "PoseenCelular",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿En tu hogar cuentan con Teléfonos celulares?",
                    ),
                ),
                (
                    "PoseenPC",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿En tu hogar cuentan con Computadoras? (de escritorio / laptop / tablet) ",
                    ),
                ),
                (
                    "Poseeninternet",
                    models.BooleanField(
                        default=False,
                        verbose_name="En tu hogar cuentan con Internet (a través del celular o por conexión en la vivienda - wifi)",
                    ),
                ),
                (
                    "hay_agua_caliente",
                    models.BooleanField(
                        default=False, verbose_name="¿Posee Agua caliente?"
                    ),
                ),
                (
                    "agua",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.agua",
                    ),
                ),
                (
                    "cant_ambientes",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.cantidadambientes",
                    ),
                ),
                (
                    "ciudadano",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ciudadanos.ciudadano",
                    ),
                ),
                (
                    "desague",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.desague",
                    ),
                ),
                (
                    "gas",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.gas",
                    ),
                ),
                (
                    "hay_banio",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.inodoro",
                    ),
                ),
                (
                    "material",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.tipoconstruccionvivienda",
                    ),
                ),
                (
                    "pisos",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.tipopisosvivienda",
                    ),
                ),
                (
                    "posesion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.tipoposesionvivienda",
                    ),
                ),
                (
                    "techos",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.tipotechovivienda",
                    ),
                ),
                (
                    "tipo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.tipovivienda",
                    ),
                ),
                (
                    "ubicacion_vivienda",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.ubicacionvivienda",
                    ),
                ),
            ],
            options={
                "verbose_name": "DimensionVivienda",
                "verbose_name_plural": "DimensionesVivienda",
                "ordering": ["ciudadano"],
            },
        ),
        migrations.CreateModel(
            name="DimensionTrabajo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ocupacion", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "obs_trabajo",
                    models.CharField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Observaciones",
                    ),
                ),
                ("creado", models.DateField(auto_now_add=True)),
                ("modificado", models.DateField(auto_now=True)),
                (
                    "horasSemanales",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Considerando todas las actividades que realizás en una semana, por las que recibís algún pago, sea en dinero o en especie, ¿cuántas horas por semana trabajas habitualmente?",
                    ),
                ),
                (
                    "busqueda_laboral",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="¿Buscaste trabajo en los últimos 30 días?",
                    ),
                ),
                (
                    "conviviente_trabaja",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="¿Conviviente trabaja?"
                    ),
                ),
                (
                    "tiene_trabajo",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="¿Actualmente realizás alguna actividad laboral, productiva o comunitaria?",
                    ),
                ),
                (
                    "Tiempobusqueda_laboral",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.tiempobusquedalaboral",
                        verbose_name="¿Cuánto hace que buscás trabajo?",
                    ),
                ),
                (
                    "actividadRealizadaComo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.actividadrealizada",
                        verbose_name="Esa actividad la realizás como…",
                    ),
                ),
                (
                    "aportesJubilacion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.aportesjubilacion",
                        verbose_name="Por ese trabajo, ¿te descuentan jubilación o aportas vos mismo?",
                    ),
                ),
                (
                    "ciudadano",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ciudadanos.ciudadano",
                    ),
                ),
                (
                    "duracionTrabajo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.duraciontrabajo",
                        verbose_name="¿Este trabajo es…",
                    ),
                ),
                (
                    "modo_contratacion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.modocontratacion",
                    ),
                ),
                (
                    "nobusqueda_laboral",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.nobusquedalaboral",
                        verbose_name="¿Por qué motivo no buscaste trabajo? (Indicá el motivo principal)",
                    ),
                ),
            ],
            options={
                "verbose_name": "DimensionLaboral",
                "verbose_name_plural": "DimensionesLaborales",
                "ordering": ["ciudadano"],
            },
        ),
        migrations.CreateModel(
            name="DimensionSalud",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "hay_obra_social",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="¿Posee cobertura de salud?"
                    ),
                ),
                (
                    "hay_enfermedad",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="¿Posee alguna enfermedad recurrente o crónica?",
                    ),
                ),
                (
                    "hay_discapacidad",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="¿Posee alguna discapacidad?",
                    ),
                ),
                (
                    "hay_cud",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="¿Posee certificado de discapacidad?",
                    ),
                ),
                (
                    "obs_salud",
                    models.CharField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Observaciones",
                    ),
                ),
                ("creado", models.DateField(auto_now_add=True)),
                ("modificado", models.DateField(auto_now=True)),
                (
                    "ciudadano",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ciudadanos.ciudadano",
                    ),
                ),
                (
                    "frecuencia_controles_medicos",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.frecuencia",
                        verbose_name="¿Con qué frecuencia realiza controles médicos?",
                    ),
                ),
                (
                    "lugares_atencion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.centrossalud",
                        verbose_name="Centro de Salud en donde se atiende",
                    ),
                ),
            ],
            options={
                "verbose_name": "DimensionSalud",
                "verbose_name_plural": "DimensionesSalud",
                "ordering": ["ciudadano"],
            },
        ),
        migrations.CreateModel(
            name="DimensionFamilia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cant_hijos",
                    models.SmallIntegerField(
                        blank=True, null=True, verbose_name="Cantidad de hijos"
                    ),
                ),
                (
                    "otro_responsable",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="¿Hay otro adulto responsable? (Padre o apoyo en la crianza)",
                    ),
                ),
                (
                    "hay_embarazadas",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Personas en el hogar embarazadas",
                    ),
                ),
                (
                    "hay_prbl_smental",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Personas en el hogar con problemas de salud mental",
                    ),
                ),
                (
                    "hay_fam_discapacidad",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Personas en el hogar con discapacidad",
                    ),
                ),
                (
                    "hay_enf_cronica",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Personas en el hogar con enfermedades crónicas",
                    ),
                ),
                (
                    "hay_priv_libertad",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Personas en el hogar privados de su libertad",
                    ),
                ),
                (
                    "obs_familia",
                    models.CharField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Observaciones",
                    ),
                ),
                ("creado", models.DateField(auto_now_add=True)),
                ("modificado", models.DateField(auto_now=True)),
                (
                    "ciudadano",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ciudadanos.ciudadano",
                    ),
                ),
            ],
            options={
                "verbose_name": "DimensionFamilia",
                "verbose_name_plural": "DimensionesFamilia",
                "ordering": ["ciudadano"],
            },
        ),
        migrations.CreateModel(
            name="DimensionEducacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "observaciones",
                    models.CharField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Observaciones",
                    ),
                ),
                ("creado", models.DateField(auto_now_add=True)),
                ("modificado", models.DateField(auto_now=True)),
                (
                    "acepta_terminos",
                    models.BooleanField(
                        default=False, verbose_name="Acepto los términos y condiciones"
                    ),
                ),
                (
                    "barrio_institucion",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Barrio"
                    ),
                ),
                (
                    "calle_institucion",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Calle"
                    ),
                ),
                (
                    "numero_institucion",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Número"
                    ),
                ),
                (
                    "realizando_curso",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿Actualmente te encontrás haciendo algún curso de capacitación?",
                    ),
                ),
                (
                    "interes_capacitacion_laboral",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿Tenés interés en realizar cursos de capacitación laboral?",
                    ),
                ),
                (
                    "oficio",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿Tenés conocimiento de algún oficio?",
                    ),
                ),
                (
                    "interes_estudio",
                    models.BooleanField(
                        default=False, verbose_name="¿Le interesa estudiar?"
                    ),
                ),
                (
                    "interes_curso",
                    models.BooleanField(
                        default=False, verbose_name="¿le interesa algun curso?"
                    ),
                ),
                (
                    "area_curso",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="area_curso_dimension",
                        to="ciudadanos.areacurso",
                        verbose_name="¿En qué áreas?",
                    ),
                ),
                (
                    "area_oficio",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="area_oficio_dimension",
                        to="ciudadanos.areacurso",
                        verbose_name="¿En qué áreas?",
                    ),
                ),
                (
                    "asiste_escuela",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.asisteescuela",
                        verbose_name="¿Asistís o asististe alguna vez a algún establecimiento educativo?",
                    ),
                ),
                (
                    "ciclo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="ciclo_dimension",
                        to="ciudadanos.niveleducativo",
                    ),
                ),
                (
                    "ciudadano",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ciudadanos.ciudadano",
                    ),
                ),
                (
                    "estado_nivel",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.estadoniveleducativo",
                        verbose_name="Estado del nivel",
                    ),
                ),
                (
                    "gestion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.tipogestion",
                        verbose_name="Tipo de gestión",
                    ),
                ),
                (
                    "grado",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.grado",
                    ),
                ),
                (
                    "institucion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.institucioneducativas",
                        verbose_name="Escuela",
                    ),
                ),
                (
                    "localidadInstitucion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="configuraciones.localidad",
                        verbose_name="Localidad de la institucion",
                    ),
                ),
                (
                    "max_nivel",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="max_nivel_dimension",
                        to="ciudadanos.niveleducativo",
                        verbose_name="Máximo nivel educativo alcanzado",
                    ),
                ),
                (
                    "municipioInstitucion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="configuraciones.municipio",
                        verbose_name="Municipio de la institucion",
                    ),
                ),
                (
                    "nivel_incompleto",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="nivel_incompleto_dimension",
                        to="ciudadanos.motivonivelincompleto",
                        verbose_name="¿Cuál fue el motivo principal por el que no terminaste tus estudios?",
                    ),
                ),
                (
                    "provinciaInstitucion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="configuraciones.provincia",
                        verbose_name="Provincia de la institucion",
                    ),
                ),
                (
                    "sin_educacion_formal",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sin_edu_formal_dimension",
                        to="ciudadanos.motivonivelincompleto",
                        verbose_name="¿Cuál fue el motivo principal por el que nunca asististe a un establecimiento educativo?",
                    ),
                ),
                (
                    "turno",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.turno",
                        verbose_name="Turno",
                    ),
                ),
            ],
            options={
                "verbose_name": "DimensionEducacion",
                "verbose_name_plural": "DimensionesEducacion",
                "ordering": ["ciudadano"],
            },
        ),
        migrations.CreateModel(
            name="DimensionEconomia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cant_aportantes",
                    models.SmallIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="¿Cuántos miembros reciben ingresos por plan social o aportan al grupo familiar?",
                    ),
                ),
                (
                    "obs_economia",
                    models.CharField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Observaciones",
                    ),
                ),
                ("creado", models.DateField(auto_now_add=True)),
                ("modificado", models.DateField(auto_now=True)),
                (
                    "ingresos",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Ingresos Mensuales "
                    ),
                ),
                (
                    "recibe_plan",
                    models.BooleanField(
                        default=False, verbose_name="¿Recibe planes sociales?"
                    ),
                ),
                (
                    "ciudadano",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ciudadanos.ciudadano",
                    ),
                ),
                (
                    "planes",
                    models.ManyToManyField(blank=True, to="ciudadanos.plansocial"),
                ),
            ],
            options={
                "verbose_name": "DimensionEconomica",
                "verbose_name_plural": "DimensionesEconomicas",
                "ordering": ["ciudadano"],
            },
        ),
        migrations.CreateModel(
            name="Derivacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("detalles", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "archivos",
                    models.FileField(
                        blank=True, null=True, upload_to="ciudadanos/archivos"
                    ),
                ),
                (
                    "obs_rechazo",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("fecha_rechazo", models.DateField(blank=True, null=True)),
                ("fecha_creado", models.DateField(auto_now_add=True, null=True)),
                ("fecha_modificado", models.DateField(auto_now=True)),
                (
                    "alertas",
                    models.ManyToManyField(blank=True, to="ciudadanos.categoriaalerta"),
                ),
                (
                    "ciudadano",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ciudadanos.ciudadano",
                    ),
                ),
                (
                    "estado",
                    models.ForeignKey(
                        blank=True,
                        default="Pendiente",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.estadoderivacion",
                    ),
                ),
                (
                    "importancia",
                    models.ForeignKey(
                        blank=True,
                        default="Alta",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.importancia",
                    ),
                ),
                (
                    "motivo_rechazo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.rechazo",
                    ),
                ),
                (
                    "organismo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ciudadanos.organismo",
                    ),
                ),
                (
                    "programa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="programa_derivado",
                        to="ciudadanos.programa",
                    ),
                ),
                (
                    "programa_solicitante",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="programa_solicitante",
                        to="ciudadanos.programa",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "CiudadanoDerivacion",
                "verbose_name_plural": "CiudadanosDerivaciones",
                "ordering": ["-fecha_creado"],
            },
        ),
        migrations.CreateModel(
            name="CiudadanoPrograma",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fecha_creado", models.DateField(auto_now=True)),
                (
                    "ciudadano",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ciudadano_programa",
                        to="ciudadanos.ciudadano",
                    ),
                ),
                (
                    "creado_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prog_creado_por",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "programas",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="programa_ciudadano",
                        to="ciudadanos.programa",
                    ),
                ),
            ],
            options={
                "verbose_name": "CiudadanoProgramas",
                "verbose_name_plural": "CiudadanosProgramas",
                "ordering": ["-fecha_creado"],
            },
        ),
        migrations.AddField(
            model_name="ciudadano",
            name="estado_civil",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="ciudadanos.estadocivil",
            ),
        ),
        migrations.AddField(
            model_name="ciudadano",
            name="familiares",
            field=models.ManyToManyField(
                blank=True,
                through="ciudadanos.GrupoFamiliar",
                to="ciudadanos.ciudadano",
            ),
        ),
        migrations.AddField(
            model_name="ciudadano",
            name="localidad",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="configuraciones.localidad",
            ),
        ),
        migrations.AddField(
            model_name="ciudadano",
            name="modificado_por",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="modificado_por",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="ciudadano",
            name="municipio",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="configuraciones.municipio",
            ),
        ),
        migrations.AddField(
            model_name="ciudadano",
            name="nacionalidad",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="ciudadanos.nacionalidad",
            ),
        ),
        migrations.AddField(
            model_name="ciudadano",
            name="provincia",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="configuraciones.provincia",
            ),
        ),
        migrations.AddField(
            model_name="ciudadano",
            name="sexo",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="ciudadanos.sexo",
            ),
        ),
        migrations.AddField(
            model_name="ciudadano",
            name="tipo_documento",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="ciudadanos.tipodocumento",
                verbose_name="Tipo documento",
            ),
        ),
        migrations.AddField(
            model_name="categoriaalerta",
            name="dimension",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="ciudadanos.dimension",
            ),
        ),
        migrations.CreateModel(
            name="Archivo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("archivo", models.FileField(upload_to="ciudadanos/archivos/")),
                ("fecha", models.DateTimeField(auto_now_add=True)),
                ("tipo", models.CharField(max_length=255)),
                (
                    "ciudadano",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ciudadanos.ciudadano",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="alerta",
            name="categoria",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="ciudadanos.categoriaalerta",
            ),
        ),
        migrations.CreateModel(
            name="Llamado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fecha", models.DateTimeField(auto_now_add=True)),
                ("observaciones", models.CharField(max_length=500)),
                (
                    "ciudadano",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.ciudadano",
                    ),
                ),
                (
                    "estado",
                    models.ForeignKey(
                        default=1,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.estadollamado",
                    ),
                ),
                (
                    "programas_llamados",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.programasllamados",
                    ),
                ),
                (
                    "subtipo_llamado",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.subtipollamado",
                    ),
                ),
                (
                    "tipo_llamado",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.tipollamado",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Llamado",
                "verbose_name_plural": "Llamados",
                "ordering": ["-fecha"],
                "indexes": [
                    models.Index(
                        fields=["ciudadano"], name="ciudadanos__ciudada_44b56d_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Intervencion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fecha", models.DateTimeField(auto_now_add=True)),
                (
                    "ciudadano",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.ciudadano",
                    ),
                ),
                ("direccion", models.ManyToManyField(to="ciudadanos.direccion")),
                (
                    "estado",
                    models.ForeignKey(
                        default=1,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.estadosintervencion",
                    ),
                ),
                (
                    "subintervencion",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.subintervencion",
                    ),
                ),
                (
                    "tipo_intervencion",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.tipointervencion",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Intervencion",
                "verbose_name_plural": "Intervenciones",
                "ordering": ["-fecha"],
                "indexes": [
                    models.Index(
                        fields=["ciudadano"], name="ciudadanos__ciudada_fe7285_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="HistorialAlerta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "observaciones",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("fecha_inicio", models.DateField(auto_now=True)),
                ("fecha_fin", models.DateField(blank=True, null=True)),
                ("meses_activa", models.JSONField(blank=True, default=list)),
                (
                    "alerta",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hist_alerta",
                        to="ciudadanos.alerta",
                    ),
                ),
                (
                    "ciudadano",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hist_ciudadano_alerta",
                        to="ciudadanos.ciudadano",
                    ),
                ),
                (
                    "creada_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hist_creada_por",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "eliminada_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hist_eliminada_por",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "HistorialAlerta",
                "verbose_name_plural": "HistorialesAlerta",
                "ordering": ["-fecha_inicio"],
                "indexes": [
                    models.Index(
                        fields=["ciudadano"], name="ciudadanos__ciudada_9dab22_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="GrupoHogar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ciudadano_1Hogar",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hogar_1",
                        to="ciudadanos.ciudadano",
                    ),
                ),
                (
                    "ciudadano_2Hogar",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hogar_2",
                        to="ciudadanos.ciudadano",
                    ),
                ),
                (
                    "estado_relacion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ciudadanos.estadorelacion",
                    ),
                ),
            ],
            options={
                "verbose_name": "GrupoHogarForm",
                "verbose_name_plural": "GrupoHogarForm",
                "ordering": ["ciudadano_2Hogar"],
                "indexes": [
                    models.Index(
                        fields=["ciudadano_1Hogar"],
                        name="ciudadanos__ciudada_1a97b9_idx",
                    ),
                    models.Index(
                        fields=["ciudadano_2Hogar"],
                        name="ciudadanos__ciudada_4bbfe8_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="grupofamiliar",
            index=models.Index(
                fields=["ciudadano_1_id"], name="ciudadanos__ciudada_0b736a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="grupofamiliar",
            index=models.Index(
                fields=["ciudadano_2_id"], name="ciudadanos__ciudada_547f88_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="grupofamiliar",
            unique_together={("ciudadano_1", "ciudadano_2")},
        ),
        migrations.AddIndex(
            model_name="dimensionvivienda",
            index=models.Index(
                fields=["ciudadano"], name="ciudadanos__ciudada_c4c25c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dimensiontrabajo",
            index=models.Index(
                fields=["ciudadano"], name="ciudadanos__ciudada_12adfd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dimensionsalud",
            index=models.Index(
                fields=["ciudadano"], name="ciudadanos__ciudada_e3b3e5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dimensioneducacion",
            index=models.Index(
                fields=["ciudadano"], name="ciudadanos__ciudada_a45782_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dimensioneconomia",
            index=models.Index(
                fields=["ciudadano"], name="ciudadanos__ciudada_31bb15_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="derivacion",
            index=models.Index(
                fields=["ciudadano"], name="ciudadanos__ciudada_60f396_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="derivacion",
            index=models.Index(
                fields=["estado"], name="ciudadanos__estado__5758f7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="ciudadano",
            index=models.Index(
                fields=["apellido"], name="ciudadanos__apellid_8f0c3b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="ciudadano",
            index=models.Index(
                fields=["fecha_nacimiento"], name="ciudadanos__fecha_n_aa8772_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="ciudadano",
            index=models.Index(
                fields=["documento"], name="ciudadanos__documen_f0fb8e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="ciudadano",
            index=models.Index(
                fields=["observaciones"], name="ciudadanos__observa_517ba3_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="ciudadano",
            unique_together={("tipo_documento", "documento")},
        ),
        migrations.AddIndex(
            model_name="archivo",
            index=models.Index(
                fields=["ciudadano"], name="ciudadanos__ciudada_956b8a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="alerta",
            index=models.Index(
                fields=["categoria"], name="ciudadanos__categor_bd9c82_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="alerta",
            index=models.Index(
                fields=["gravedad"], name="ciudadanos__graveda_a20d51_idx"
            ),
        ),
    ]
