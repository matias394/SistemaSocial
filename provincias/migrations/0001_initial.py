# Generated by Django 4.2.16 on 2025-01-15 03:59

from django.db import migrations, models
import django.db.models.deletion
from django.conf import settings


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("configuraciones", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CanalesVentas",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Canal de Ventas",
                "verbose_name_plural": "Canales de Ventas",
            },
        ),
        migrations.CreateModel(
            name="CantidadClientes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Cantidad de Clientes",
                "verbose_name_plural": "Cantidades de Clientes",
            },
        ),
        migrations.CreateModel(
            name="CantidadCompetidores",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Cantidad de Competidores",
                "verbose_name_plural": "Cantidades de Competidores",
            },
        ),
        migrations.CreateModel(
            name="CantidadIntegrantes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Cantidad de Integrantes",
                "verbose_name_plural": "Cantidades de Integrantes",
            },
        ),
        migrations.CreateModel(
            name="Comprador",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Comprador",
                "verbose_name_plural": "Compradores",
            },
        ),
        migrations.CreateModel(
            name="CondicionOcupacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Condición de Ocupación",
                "verbose_name_plural": "Condiciones de Ocupación",
            },
        ),
        migrations.CreateModel(
            name="ConocimientoCompetidores",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Conocimiento de Competidores",
                "verbose_name_plural": "Conocimientos de Competidores",
            },
        ),
        migrations.CreateModel(
            name="DestinoMaterialesRecuperados",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Destino de Materiales Recuperados",
                "verbose_name_plural": "Destinos de Materiales Recuperados",
            },
        ),
        migrations.CreateModel(
            name="EstudiosAlcanzados",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Estudios Alcanzados",
                "verbose_name_plural": "Estudios Alcanzados",
            },
        ),
        migrations.CreateModel(
            name="FijacionPrecios",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Fijación de Precios",
                "verbose_name_plural": "Fijaciones de Precios",
            },
        ),
        migrations.CreateModel(
            name="Genero",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Género",
                "verbose_name_plural": "Géneros",
            },
        ),
        migrations.CreateModel(
            name="IngresoPromedioFamiliar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Ingreso Promedio Familiar",
                "verbose_name_plural": "Ingresos Promedio Familiar",
            },
        ),
        migrations.CreateModel(
            name="InteractuaCompetidores",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Interacción con Competidores",
                "verbose_name_plural": "Interacciones con Competidores",
            },
        ),
        migrations.CreateModel(
            name="LineaDeAccion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "produccion_apoyo_tecnico",
                    models.BooleanField(
                        default=False,
                        verbose_name="Apoyo técnico para mejorar competitividad",
                    ),
                ),
                (
                    "produccion_maquinaria",
                    models.BooleanField(
                        default=False,
                        verbose_name="Acceso a máquinas, herramientas e insumos",
                    ),
                ),
                (
                    "produccion_tecnologias",
                    models.BooleanField(
                        default=False,
                        verbose_name="Incorporación de nuevas tecnologías",
                    ),
                ),
                (
                    "produccion_entrega",
                    models.BooleanField(
                        default=False, verbose_name="Entrega directa según stock"
                    ),
                ),
                (
                    "comercializacion_fortalecimiento_institucional",
                    models.BooleanField(
                        default=False, verbose_name="Fortalecimiento Institucional"
                    ),
                ),
                (
                    "comercializacion_apoyo_tecnologico",
                    models.BooleanField(
                        default=False, verbose_name="Apoyo Tecnológico"
                    ),
                ),
                (
                    "comercializacion_habilidades_blandas",
                    models.BooleanField(
                        default=False,
                        verbose_name="Habilidades Blandas para la Comercialización",
                    ),
                ),
                (
                    "comercializacion_fortalecimiento_unidades",
                    models.BooleanField(
                        default=False,
                        verbose_name="Fortalecimiento de la Comercialización de Unidades Productivas",
                    ),
                ),
                (
                    "circular_fortalecimiento",
                    models.BooleanField(
                        default=False,
                        verbose_name="Fortalecimiento a recuperadores de base, organizaciones y sistemas locales de reciclado",
                    ),
                ),
                (
                    "circular_practicas_sostenibles",
                    models.BooleanField(
                        default=False,
                        verbose_name="Implementación de prácticas sostenibles",
                    ),
                ),
                (
                    "circular_materiales_reciclados",
                    models.BooleanField(
                        default=False, verbose_name="Uso de materiales reciclados"
                    ),
                ),
                (
                    "circular_reduccion_residuos",
                    models.BooleanField(
                        default=False, verbose_name="Reducción de residuos"
                    ),
                ),
                (
                    "fundamentacion",
                    models.TextField(verbose_name="Fundamentos del proyecto"),
                ),
                (
                    "destinatarios_directos",
                    models.FileField(
                        upload_to="destinatarios_directos/",
                        verbose_name="Destinatarios directos",
                    ),
                ),
                (
                    "destinatarios_indirectos",
                    models.PositiveBigIntegerField(
                        verbose_name="Destinatarios indirectos"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LugarComercializacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Lugar de Comercialización",
                "verbose_name_plural": "Lugares de Comercialización",
            },
        ),
        migrations.CreateModel(
            name="MedioPlanificacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Medio de Planificación",
                "verbose_name_plural": "Medios de Planificación",
            },
        ),
        migrations.CreateModel(
            name="ModalidadCicloProductivo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Modalidad de Ciclo Productivo",
                "verbose_name_plural": "Modalidades de Ciclo Productivo",
            },
        ),
        migrations.CreateModel(
            name="ModalidadComercializacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Modalidad de Comercialización",
                "verbose_name_plural": "Modalidades de Comercialización",
            },
        ),
        migrations.CreateModel(
            name="ModalidadCompras",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Modalidad de Compras",
                "verbose_name_plural": "Modalidades de Compras",
            },
        ),
        migrations.CreateModel(
            name="Objetivo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Objetivo",
                "verbose_name_plural": "Objetivos",
            },
        ),
        migrations.CreateModel(
            name="OcupacionHorasSemanales",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Ocupación Horas Semanales",
                "verbose_name_plural": "Ocupaciones Horas Semanales",
            },
        ),
        migrations.CreateModel(
            name="PlataformaComunicacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Plataforma de Comunicación",
                "verbose_name_plural": "Plataformas de Comunicación",
            },
        ),
        migrations.CreateModel(
            name="PlazoCompraCredito",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Plazo de Compra a Crédito",
                "verbose_name_plural": "Plazos de Compra a Crédito",
            },
        ),
        migrations.CreateModel(
            name="RedSocial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Red Social",
                "verbose_name_plural": "Redes Sociales",
            },
        ),
        migrations.CreateModel(
            name="Rubro",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Rubro",
                "verbose_name_plural": "Rubros",
            },
        ),
        migrations.CreateModel(
            name="TipoActividad",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tipo de Actividad",
                "verbose_name_plural": "Tipos de Actividad",
            },
        ),
        migrations.CreateModel(
            name="TipoComunidad",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tipo de Comunidad",
                "verbose_name_plural": "Tipos de Comunidad",
            },
        ),
        migrations.CreateModel(
            name="TipoDispositivosMoviles",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tipo de Dispositivos Móviles",
                "verbose_name_plural": "Tipos de Dispositivos Móviles",
            },
        ),
        migrations.CreateModel(
            name="TipoInmueble",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tipo de Inmueble",
                "verbose_name_plural": "Tipos de Inmueble",
            },
        ),
        migrations.CreateModel(
            name="TipoInternet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tipo de Internet",
                "verbose_name_plural": "Tipos de Internet",
            },
        ),
        migrations.CreateModel(
            name="TipoOcupacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tipo de Ocupación",
                "verbose_name_plural": "Tipos de Ocupación",
            },
        ),
        migrations.CreateModel(
            name="TipoPersonaJuridica",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tipo de Persona Jurídica",
                "verbose_name_plural": "Tipos de Personas Jurídicas",
            },
        ),
        migrations.CreateModel(
            name="Proyecto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fecha_creacion", models.DateTimeField(auto_now=True)),
                ("fecha_modificacion", models.DateTimeField(auto_now=True)),
                (
                    "estado",
                    models.CharField(blank=True, default="Pendiente", max_length=255),
                ),
                ("nombre", models.CharField(max_length=255, null=True)),
                (
                    "tipo_anexo",
                    models.CharField(
                        choices=[
                            ("SOCIO_PRODUCTIVO", "Socio Productivo"),
                            ("FORMACION", "Formación"),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "creador",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="creador",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modificador",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="modificador",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "provincia",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="configuraciones.provincia",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Presupuesto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo_actividad", models.CharField(max_length=255)),
                ("tipo_producto", models.CharField(max_length=255)),
                ("nombre_producto", models.CharField(max_length=255)),
                ("cantidad_producto", models.PositiveBigIntegerField()),
                ("costo_unitario", models.PositiveBigIntegerField()),
                (
                    "linea_de_accion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="presupuestos",
                        to="provincias.lineadeaccion",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PersonaJuridica",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "direccion",
                    models.CharField(max_length=255, verbose_name="Dirección"),
                ),
                (
                    "localidad",
                    models.CharField(max_length=255, verbose_name="Localidad"),
                ),
                (
                    "codigo_postal",
                    models.PositiveBigIntegerField(verbose_name="Codigo postal"),
                ),
                (
                    "proyecto_nombre",
                    models.CharField(
                        max_length=255, verbose_name="Nombre del Proyecto"
                    ),
                ),
                (
                    "proyecto_costo",
                    models.PositiveBigIntegerField(verbose_name="Costo del Proyecto"),
                ),
                (
                    "proyecto_pertenece_comunidad_indigena",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿El proyecto pertenece a una comunidad indigena?",
                    ),
                ),
                (
                    "proyecto_comunidad_indigena",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "proyecto_practicas_regenerativas",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿El proyecto esta vinculado a prácticas regenerativas/agroecológicas",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        max_length=255, verbose_name="Nombre de la Organización"
                    ),
                ),
                ("fecha_creacion", models.DateField(verbose_name="Fecha de Creación")),
                (
                    "numero_personeria_juridica",
                    models.CharField(
                        max_length=255, verbose_name="Número de Personería Jurídica"
                    ),
                ),
                (
                    "fecha_otorgamiento",
                    models.DateField(verbose_name="Fecha de otorgamiento"),
                ),
                ("cuit", models.PositiveBigIntegerField(verbose_name="CUIT")),
                (
                    "domicilio_legal",
                    models.CharField(
                        max_length=255, verbose_name="Domicilio Legal y Electrónico"
                    ),
                ),
                (
                    "autoridad_nombre_completo",
                    models.CharField(
                        max_length=255, verbose_name="Nombre completo de la autoridad"
                    ),
                ),
                (
                    "autoridad_dni",
                    models.PositiveBigIntegerField(verbose_name="DNI de la autoridad"),
                ),
                (
                    "autoridad_cuit",
                    models.PositiveBigIntegerField(verbose_name="CUIT de la autoridad"),
                ),
                (
                    "autoridad_rol",
                    models.CharField(
                        max_length=255, verbose_name="Rol de la autoridad"
                    ),
                ),
                (
                    "provincia",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="configuraciones.provincia",
                        verbose_name="Provincia",
                    ),
                ),
                (
                    "proyecto_objetivo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.objetivo",
                        verbose_name="Objetivo del Proyecto",
                    ),
                ),
                (
                    "proyecto_rubro",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.rubro",
                        verbose_name="Rubro del Proyecto",
                    ),
                ),
                (
                    "proyecto_tipo_actividad",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="organizacion_tipo_actividad",
                        to="provincias.tipoactividad",
                    ),
                ),
                (
                    "tipo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.tipopersonajuridica",
                        verbose_name="Tipo de Organización",
                    ),
                ),
            ],
            options={
                "verbose_name": "Organización",
                "verbose_name_plural": "Organizaciones",
            },
        ),
        migrations.CreateModel(
            name="PersonaFisica",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "direccion",
                    models.CharField(max_length=255, verbose_name="Dirección"),
                ),
                (
                    "localidad",
                    models.CharField(max_length=255, verbose_name="Localidad"),
                ),
                (
                    "codigo_postal",
                    models.PositiveBigIntegerField(verbose_name="Codigo postal"),
                ),
                (
                    "proyecto_nombre",
                    models.CharField(
                        max_length=255, verbose_name="Nombre del Proyecto"
                    ),
                ),
                (
                    "proyecto_costo",
                    models.PositiveBigIntegerField(verbose_name="Costo del Proyecto"),
                ),
                (
                    "proyecto_pertenece_comunidad_indigena",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿El proyecto pertenece a una comunidad indigena?",
                    ),
                ),
                (
                    "proyecto_comunidad_indigena",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "proyecto_practicas_regenerativas",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿El proyecto esta vinculado a prácticas regenerativas/agroecológicas",
                    ),
                ),
                (
                    "nombre_completo",
                    models.CharField(max_length=255, verbose_name="Nombre completo"),
                ),
                ("dni", models.PositiveBigIntegerField(verbose_name="DNI")),
                (
                    "fecha_nacimiento",
                    models.DateField(verbose_name="Fecha de nacimiento"),
                ),
                ("cuil", models.PositiveBigIntegerField(verbose_name="CUIL")),
                (
                    "domicilio_real",
                    models.CharField(max_length=255, verbose_name="Domicilio real"),
                ),
                (
                    "mail",
                    models.EmailField(
                        max_length=254, verbose_name="Correo electrónico"
                    ),
                ),
                ("telefono", models.PositiveBigIntegerField(verbose_name="Teléfono")),
                (
                    "provincia",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="configuraciones.provincia",
                        verbose_name="Provincia",
                    ),
                ),
                (
                    "proyecto_objetivo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.objetivo",
                        verbose_name="Objetivo del Proyecto",
                    ),
                ),
                (
                    "proyecto_rubro",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.rubro",
                        verbose_name="Rubro del Proyecto",
                    ),
                ),
                (
                    "proyecto_tipo_actividad",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="persona_tipo_actividad",
                        to="provincias.tipoactividad",
                    ),
                ),
            ],
            options={
                "verbose_name": "Persona",
                "verbose_name_plural": "Personas",
            },
        ),
        migrations.CreateModel(
            name="Observacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("observacion", models.TextField()),
                ("fecha_creacion", models.DateTimeField(auto_now=True)),
                (
                    "proyecto",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="observaciones",
                        to="provincias.proyecto",
                    ),
                ),
            ],
            options={
                "verbose_name": "Observación",
                "verbose_name_plural": "Observaciones",
            },
        ),
        migrations.CreateModel(
            name="DiagnosticoJuridica",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "banco",
                    models.BooleanField(
                        default=False, verbose_name="¿Opera con algún banco?"
                    ),
                ),
                (
                    "banco_nombre",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="¿Cual banco?",
                    ),
                ),
                (
                    "cuenta_digital",
                    models.BooleanField(
                        default=False, verbose_name="¿Tiene alguna cuenta digital?"
                    ),
                ),
                (
                    "financiamiento",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿Posee otras fuentes de financiamiento y/o apoyo?",
                    ),
                ),
                (
                    "financiamiento_nombre",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="¿Cual financiamiento?",
                    ),
                ),
                (
                    "ingresos_mensuales",
                    models.PositiveBigIntegerField(
                        verbose_name="Ingresos promedios mensuales"
                    ),
                ),
                (
                    "egresos_mensuales",
                    models.PositiveBigIntegerField(
                        verbose_name="Egresos promedios mensuales"
                    ),
                ),
                (
                    "ganancias_mensuales",
                    models.PositiveBigIntegerField(
                        verbose_name="Excede o ganancias (ventas - costo del mes)"
                    ),
                ),
                (
                    "internet",
                    models.BooleanField(
                        default=False, verbose_name="¿Cuenta con acceso a internet?"
                    ),
                ),
                (
                    "dispositivos_conectados",
                    models.PositiveBigIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Número de dispositivos conectados",
                    ),
                ),
                (
                    "ventas_destinadas_turismo",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿Sus ventas suelen estar destinadas al turismo?",
                    ),
                ),
                (
                    "recicladores_urbanos",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿El proyecto incluye activamente a recicladores urbanos organizados en cooperativas o asociaciones?",
                    ),
                ),
                (
                    "recicladores_equipados",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿Los recicladores urbanos cuentan con elementos de protección personal adecuados, condiciones laborales adecuadas como salarios dignos y horarios razonables?",
                    ),
                ),
                (
                    "clasificacion_residuos",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿Existe un sistema de separación y clasificación de residuos desde el origen, en el proyecto de referencia?",
                    ),
                ),
                (
                    "optimizacion_recursos",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿El proyecto optimiza el uso de los recursos, promoviendo la reducción del consumo de materiales?",
                    ),
                ),
                (
                    "financiamiento_sostenible",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿El proyecto cuenta con fuentes de financiamiento sostenibles?",
                    ),
                ),
                (
                    "estrategia_comercializacion",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿Poseen estrategias de comercialización?",
                    ),
                ),
                (
                    "tecnologias_mejorar_eficiencia",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿Se utilizan tecnologías para mejorar la eficiencia en la recolección, clasificación y reciclaje de materiales y los recicladores tienen acceso a plataformas digitales?",
                    ),
                ),
                (
                    "tecnologias_cuales",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="¿Cuáles tecnologias se utilizan?",
                    ),
                ),
                (
                    "mision_vision",
                    models.TextField(verbose_name="Misión y visión de la organización"),
                ),
                (
                    "composicion_equipo",
                    models.CharField(
                        max_length=255,
                        verbose_name="Composición de su equipo de trabajo",
                    ),
                ),
                (
                    "canales_ventas",
                    models.ManyToManyField(
                        to="provincias.canalesventas", verbose_name="Canales de venta"
                    ),
                ),
                (
                    "cantidad_clientes",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.cantidadclientes",
                        verbose_name="¿Cuántos clientes tiene?",
                    ),
                ),
                (
                    "cantidad_competidores",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.cantidadcompetidores",
                        verbose_name="Cuántos competidores tiene en su radio de venta?",
                    ),
                ),
                (
                    "cantidad_integrantes",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.cantidadintegrantes",
                        verbose_name="Cantidad de integrantes de su organizacion",
                    ),
                ),
                (
                    "comprador",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.comprador",
                        verbose_name="¿A quién le vende?",
                    ),
                ),
                (
                    "conocimiento_competidores",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.conocimientocompetidores",
                        verbose_name="¿Conoce a sus competidores?",
                    ),
                ),
                (
                    "destino_materiales_recuperados",
                    models.ManyToManyField(
                        to="provincias.destinomaterialesrecuperados",
                        verbose_name="¿Cuál es el destino de los materiales recuperados?",
                    ),
                ),
                (
                    "fijacion_precios",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.fijacionprecios",
                        verbose_name="¿Cómo fija los precios de venta?",
                    ),
                ),
                (
                    "genero_mayoria",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.genero",
                        verbose_name="Géneros de la mayoria",
                    ),
                ),
                (
                    "interactua_compentidores",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.interactuacompetidores",
                        verbose_name="¿Interactúa con sus competidores?",
                    ),
                ),
                (
                    "lugar_comercializacion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.lugarcomercializacion",
                        verbose_name="¿Dónde vende?",
                    ),
                ),
                (
                    "medio_planificacion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.medioplanificacion",
                        verbose_name="¿A través de qué medio planifica su administración?",
                    ),
                ),
                (
                    "modalidad_ciclo_productivo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.modalidadcicloproductivo",
                        verbose_name="¿El ciclo productivo es lineal o circular (se reintroducen los lateriales en la cadena productiva)?",
                    ),
                ),
                (
                    "modalidad_comercializacion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.modalidadcomercializacion",
                        verbose_name="¿Cómo realiza sus ventas o produccion?",
                    ),
                ),
                (
                    "modalidad_compras",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.modalidadcompras",
                        verbose_name="¿Cómo compra habitualmente?",
                    ),
                ),
                (
                    "plataforma_comunicacion",
                    models.ManyToManyField(
                        to="provincias.plataformacomunicacion",
                        verbose_name="Plataformas de comunicación utilizadas",
                    ),
                ),
                (
                    "plazo_compra_credito",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.plazocompracredito",
                        verbose_name="Si compra a crédito, ¿qué plazo tiene para pagar?",
                    ),
                ),
                (
                    "redes_sociales",
                    models.ManyToManyField(
                        to="provincias.redsocial", verbose_name="Uso de redes sociales"
                    ),
                ),
                (
                    "rubro",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.rubro",
                        verbose_name="Rubro de la organización",
                    ),
                ),
                (
                    "tipo_actividad",
                    models.ManyToManyField(
                        to="provincias.tipoactividad", verbose_name="Tipo de actividad"
                    ),
                ),
                (
                    "tipo_comunidad",
                    models.ManyToManyField(
                        to="provincias.tipocomunidad",
                        verbose_name="Tipo de comunidad donde opera la institucion",
                    ),
                ),
                (
                    "tipo_dispositivos_moviles",
                    models.ManyToManyField(
                        to="provincias.tipodispositivosmoviles",
                        verbose_name="Tipo de dispositivos móviles",
                    ),
                ),
                (
                    "tipo_inmueble",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.tipoinmueble",
                        verbose_name="El inmueble afectado a la actividad es de tipo",
                    ),
                ),
                (
                    "tipo_internet",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.tipointernet",
                        verbose_name="Tipo de acceso a internet",
                    ),
                ),
            ],
            options={
                "verbose_name": "Diagnóstico de Organización",
                "verbose_name_plural": "Diagnósticos de Organizaciones",
            },
        ),
        migrations.CreateModel(
            name="DiagnosticoFisica",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "banco",
                    models.BooleanField(
                        default=False, verbose_name="¿Opera con algún banco?"
                    ),
                ),
                (
                    "banco_nombre",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="¿Cual banco?",
                    ),
                ),
                (
                    "cuenta_digital",
                    models.BooleanField(
                        default=False, verbose_name="¿Tiene alguna cuenta digital?"
                    ),
                ),
                (
                    "financiamiento",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿Posee otras fuentes de financiamiento y/o apoyo?",
                    ),
                ),
                (
                    "financiamiento_nombre",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="¿Cual financiamiento?",
                    ),
                ),
                (
                    "ingresos_mensuales",
                    models.PositiveBigIntegerField(
                        verbose_name="Ingresos promedios mensuales"
                    ),
                ),
                (
                    "egresos_mensuales",
                    models.PositiveBigIntegerField(
                        verbose_name="Egresos promedios mensuales"
                    ),
                ),
                (
                    "ganancias_mensuales",
                    models.PositiveBigIntegerField(
                        verbose_name="Excede o ganancias (ventas - costo del mes)"
                    ),
                ),
                (
                    "internet",
                    models.BooleanField(
                        default=False, verbose_name="¿Cuenta con acceso a internet?"
                    ),
                ),
                (
                    "dispositivos_conectados",
                    models.PositiveBigIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Número de dispositivos conectados",
                    ),
                ),
                (
                    "ventas_destinadas_turismo",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿Sus ventas suelen estar destinadas al turismo?",
                    ),
                ),
                (
                    "recicladores_urbanos",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿El proyecto incluye activamente a recicladores urbanos organizados en cooperativas o asociaciones?",
                    ),
                ),
                (
                    "recicladores_equipados",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿Los recicladores urbanos cuentan con elementos de protección personal adecuados, condiciones laborales adecuadas como salarios dignos y horarios razonables?",
                    ),
                ),
                (
                    "clasificacion_residuos",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿Existe un sistema de separación y clasificación de residuos desde el origen, en el proyecto de referencia?",
                    ),
                ),
                (
                    "optimizacion_recursos",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿El proyecto optimiza el uso de los recursos, promoviendo la reducción del consumo de materiales?",
                    ),
                ),
                (
                    "financiamiento_sostenible",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿El proyecto cuenta con fuentes de financiamiento sostenibles?",
                    ),
                ),
                (
                    "estrategia_comercializacion",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿Poseen estrategias de comercialización?",
                    ),
                ),
                (
                    "tecnologias_mejorar_eficiencia",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿Se utilizan tecnologías para mejorar la eficiencia en la recolección, clasificación y reciclaje de materiales y los recicladores tienen acceso a plataformas digitales?",
                    ),
                ),
                (
                    "tecnologias_cuales",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="¿Cuáles tecnologias se utilizan?",
                    ),
                ),
                (
                    "ocupacion_sosten_hogar",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿Es esta actividad el principal sostén del hogar?",
                    ),
                ),
                (
                    "beneficiario_social",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿Es beneficiario de algún programa social nacional y/o provincial?",
                    ),
                ),
                (
                    "beneficio_social",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="¿Cuál?"
                    ),
                ),
                (
                    "familia_adultos",
                    models.PositiveBigIntegerField(
                        verbose_name="Cantidad de adultos en el grupo familiar"
                    ),
                ),
                (
                    "familia_menores",
                    models.PositiveBigIntegerField(
                        verbose_name="Cantidad de menores en el grupo familiar"
                    ),
                ),
                (
                    "familia_trabajadores",
                    models.PositiveBigIntegerField(
                        verbose_name="Cantidad de personas que trabajan en el grupo familiar"
                    ),
                ),
                (
                    "canales_ventas",
                    models.ManyToManyField(
                        to="provincias.canalesventas", verbose_name="Canales de venta"
                    ),
                ),
                (
                    "cantidad_clientes",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.cantidadclientes",
                        verbose_name="¿Cuántos clientes tiene?",
                    ),
                ),
                (
                    "cantidad_competidores",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.cantidadcompetidores",
                        verbose_name="Cuántos competidores tiene en su radio de venta?",
                    ),
                ),
                (
                    "comprador",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.comprador",
                        verbose_name="¿A quién le vende?",
                    ),
                ),
                (
                    "conocimiento_competidores",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.conocimientocompetidores",
                        verbose_name="¿Conoce a sus competidores?",
                    ),
                ),
                (
                    "destino_materiales_recuperados",
                    models.ManyToManyField(
                        to="provincias.destinomaterialesrecuperados",
                        verbose_name="¿Cuál es el destino de los materiales recuperados?",
                    ),
                ),
                (
                    "estudios_alcanzados",
                    models.ManyToManyField(
                        to="provincias.estudiosalcanzados",
                        verbose_name="Nivel de estudios alcanzados",
                    ),
                ),
                (
                    "familia_ingreso_promedio",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.ingresopromediofamiliar",
                        verbose_name="Ingreso promedio familiar",
                    ),
                ),
                (
                    "fijacion_precios",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.fijacionprecios",
                        verbose_name="¿Cómo fija los precios de venta?",
                    ),
                ),
                (
                    "interactua_compentidores",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.interactuacompetidores",
                        verbose_name="¿Interactúa con sus competidores?",
                    ),
                ),
                (
                    "lugar_comercializacion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.lugarcomercializacion",
                        verbose_name="¿Dónde vende?",
                    ),
                ),
                (
                    "medio_planificacion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.medioplanificacion",
                        verbose_name="¿A través de qué medio planifica su administración?",
                    ),
                ),
                (
                    "modalidad_ciclo_productivo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.modalidadcicloproductivo",
                        verbose_name="¿El ciclo productivo es lineal o circular (se reintroducen los lateriales en la cadena productiva)?",
                    ),
                ),
                (
                    "modalidad_comercializacion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.modalidadcomercializacion",
                        verbose_name="¿Cómo realiza sus ventas o produccion?",
                    ),
                ),
                (
                    "modalidad_compras",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.modalidadcompras",
                        verbose_name="¿Cómo compra habitualmente?",
                    ),
                ),
                (
                    "ocupacion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.tipoocupacion",
                        verbose_name="Ocupación",
                    ),
                ),
                (
                    "ocupacion_condicion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.condicionocupacion",
                        verbose_name="Condición de tu actividad",
                    ),
                ),
                (
                    "ocupacion_horas_semanales",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.ocupacionhorassemanales",
                        verbose_name="Cuántas horas semanales le dedica a la actividad",
                    ),
                ),
                (
                    "plataforma_comunicacion",
                    models.ManyToManyField(
                        to="provincias.plataformacomunicacion",
                        verbose_name="Plataformas de comunicación utilizadas",
                    ),
                ),
                (
                    "plazo_compra_credito",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.plazocompracredito",
                        verbose_name="Si compra a crédito, ¿qué plazo tiene para pagar?",
                    ),
                ),
                (
                    "redes_sociales",
                    models.ManyToManyField(
                        to="provincias.redsocial", verbose_name="Uso de redes sociales"
                    ),
                ),
                (
                    "rubro",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.rubro",
                        verbose_name="Rubro de la organización",
                    ),
                ),
                (
                    "tipo_actividad",
                    models.ManyToManyField(
                        to="provincias.tipoactividad", verbose_name="Tipo de actividad"
                    ),
                ),
                (
                    "tipo_dispositivos_moviles",
                    models.ManyToManyField(
                        to="provincias.tipodispositivosmoviles",
                        verbose_name="Tipo de dispositivos móviles",
                    ),
                ),
                (
                    "tipo_inmueble",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.tipoinmueble",
                        verbose_name="El inmueble afectado a la actividad es de tipo",
                    ),
                ),
                (
                    "tipo_internet",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.tipointernet",
                        verbose_name="Tipo de acceso a internet",
                    ),
                ),
            ],
            options={
                "verbose_name": "Diagnóstico de Persona",
                "verbose_name_plural": "Diagnósticos de Personas",
            },
        ),
        migrations.CreateModel(
            name="AnexoSocioProductivo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "personeria",
                    models.CharField(
                        choices=[
                            ("JURIDICA", "Persona Juridica"),
                            ("FISICA", "Persona Fisica"),
                        ],
                        max_length=255,
                        verbose_name="¿Persona fisica o persona juridica?",
                    ),
                ),
                (
                    "acta_constitutiva",
                    models.FileField(
                        upload_to="anexos/socioproductivos/actas_constitutivas/",
                        verbose_name="Acta constitutiva",
                    ),
                ),
                (
                    "estatuto",
                    models.FileField(
                        upload_to="anexos/socioproductivos/estatutos/",
                        verbose_name="Estatuto",
                    ),
                ),
                (
                    "personeria_juridica",
                    models.FileField(
                        upload_to="anexos/socioproductivos/personerias_juridicas/",
                        verbose_name="Personería jurídica",
                    ),
                ),
                (
                    "designacion_autoridades",
                    models.FileField(
                        upload_to="anexos/socioproductivos/designaciones_autoridades/",
                        verbose_name="Designación de autoridades",
                    ),
                ),
                (
                    "autorizacion_gestionar",
                    models.FileField(
                        upload_to="anexos/socioproductivos/autorizaciones_gestionar/",
                        verbose_name="Autorización a gestionar",
                    ),
                ),
                (
                    "designacion_intendente",
                    models.FileField(
                        upload_to="anexos/socioproductivos/designaciones_indentendes/",
                        verbose_name="Designación del intendente",
                    ),
                ),
                (
                    "media",
                    models.FileField(
                        upload_to="anexos/socioproductivos/",
                        verbose_name="Contenido multimedia",
                    ),
                ),
                (
                    "diagnostico_fisica",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.diagnosticofisica",
                    ),
                ),
                (
                    "diagnostico_juridica",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.diagnosticojuridica",
                    ),
                ),
                (
                    "fisica",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.personafisica",
                    ),
                ),
                (
                    "juridica",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.personajuridica",
                    ),
                ),
                (
                    "linea_de_accion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="provincias.lineadeaccion",
                    ),
                ),
                (
                    "proyecto",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="anexos_socioproductivos",
                        to="provincias.proyecto",
                    ),
                ),
            ],
            options={
                "verbose_name": "Anexo socio productivo",
                "verbose_name_plural": "Anexos socio productivo",
            },
        ),
        migrations.CreateModel(
            name="AnexoFormacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "proyecto",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="anexos_formaciones",
                        to="provincias.proyecto",
                    ),
                ),
            ],
        ),
    ]
